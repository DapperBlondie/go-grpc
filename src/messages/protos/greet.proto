syntax="proto3";
// protoc -I=src/messages/protos --go_out=plugins=grpc:src/ src/messages/protos/greet.proto
package greet;
option go_package="messages/files";

message Greeting {
  string first_name=1;
  string last_name=2;
}

message GreetingResponse {
  string result=1;
}

message GreetingRequest {
  Greeting greeting=1;
}

message GreetingManyTimeRequest {
  Greeting greeting=1;
}

message GreetingManyTimesResponse {
  string result=1;
}

message LongGreetRequest {
  Greeting greeting=1;
}

message LongGreetResponse {
  string result=1;
}

message GreetEveryoneRequest {
  Greeting greeting=1;
}

message GreetEveryoneResponse {
  string result=1;
}

message GreetWithDeadlineRequest {
  Greeting greet=1;
}

message GreetWithDeadlineResponse {
  string result=1;
}

service GreetService{
  // Greet is a unary API for greeting to a request
  rpc Greet(GreetingRequest) returns (GreetingResponse) {};
  // GreetManyTimes is server streaming API for greet multiple times to client request
  rpc GreetManyTimes(GreetingManyTimeRequest) returns (stream GreetingManyTimesResponse) {};
  // LongGreet is a client streaming API for implementing a long greet to server
  rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};
  // GreetEveryone is bi-directional streaming API for handling the multiple greet asynchronously
  rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse) {};
  // GreetWithDeadline is a unary API for implementing
  rpc GreetWithDeadline(GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse) {};
}
